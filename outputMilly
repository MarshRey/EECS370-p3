instruction memory:
	instrMem[ 0 ]	= 0x00810010	= 8454160	= lw 0 1 16
	instrMem[ 1 ]	= 0x0082000d	= 8519693	= lw 0 2 13
	instrMem[ 2 ]	= 0x0083000e	= 8585230	= lw 0 3 14
	instrMem[ 3 ]	= 0x0084000f	= 8650767	= lw 0 4 15
	instrMem[ 4 ]	= 0x01080004	= 17301508	= beq 1 0 4
	instrMem[ 5 ]	= 0x0085000d	= 8716301	= lw 0 5 13
	instrMem[ 6 ]	= 0x01230005	= 19070981	= beq 4 3 5
	instrMem[ 7 ]	= 0x00090002	= 589826	= add 1 1 2
	instrMem[ 8 ]	= 0x001b0005	= 1769477	= add 3 3 5
	instrMem[ 9 ]	= 0x010b0002	= 17498114	= beq 1 3 2
	instrMem[ 10 ]	= 0x00400000	= 4194304	= nor 0 0 0
	instrMem[ 11 ]	= 0x00090002	= 589826	= add 1 1 2
	instrMem[ 12 ]	= 0x01800000	= 25165824	= halt
	instrMem[ 13 ]	= 0x00000001	= 1	= add 0 0 1
	instrMem[ 14 ]	= 0x00000004	= 4	= add 0 0 4
	instrMem[ 15 ]	= 0x00000005	= 5	= add 0 0 5
	instrMem[ 16 ]	= 0x00000000	= 0	= add 0 0 0

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519693 ( lw 0 2 13 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 16
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 8519693 ( lw 0 2 13 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 13
	EX/MEM pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		branchTarget 17 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 16
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8650767 ( lw 0 4 15 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 14
	EX/MEM pipeline register:
		instruction = 8519693 ( lw 0 2 13 )
		branchTarget 15 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 13
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		writeData = 0
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
Wrote writeData to reg[16] = 0

@@@
state before cycle 5 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 17301508 ( beq 1 0 4 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 8650767 ( lw 0 4 15 )
		pcPlus1 = 4
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 15
	EX/MEM pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		branchTarget 17 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 14
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519693 ( lw 0 2 13 )
		writeData = 1
	WB/END pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		writeData = 0
end state
Wrote writeData to reg[13] = 1

@@@
state before cycle 6 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8716301 ( lw 0 5 13 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 17301508 ( beq 1 0 4 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 0
		offset = 4
	EX/MEM pipeline register:
		instruction = 8650767 ( lw 0 4 15 )
		branchTarget 19 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 15
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		writeData = 4
	WB/END pipeline register:
		instruction = 8519693 ( lw 0 2 13 )
		writeData = 1
end state
Wrote writeData to reg[14] = 4

@@@
state before cycle 7 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 4
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 19070981 ( beq 4 3 5 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 8716301 ( lw 0 5 13 )
		pcPlus1 = 6
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 13
	EX/MEM pipeline register:
		instruction = 17301508 ( beq 1 0 4 )
		branchTarget 9
		eq ? True
		aluResult = 9 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8650767 ( lw 0 4 15 )
		writeData = 5
	WB/END pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		writeData = 4
end state
Wrote writeData to reg[15] = 5

@@@
state before cycle 8 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 4
		reg[ 4 ] = 5
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 8 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 7 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 4 (Don't Care)
		offset = 5 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 19 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 13 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 17301508 ( beq 1 0 4 )
		writeData = 5 (Don't Care)
	WB/END pipeline register:
		instruction = 8650767 ( lw 0 4 15 )
		writeData = 5
end state

@@@
state before cycle 9 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 4
		reg[ 4 ] = 5
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 17498114 ( beq 1 3 2 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 8 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 12 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 17301508 ( beq 1 0 4 )
		writeData = 5 (Don't Care)
end state

@@@
state before cycle 10 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 4
		reg[ 4 ] = 5
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4194304 ( nor 0 0 0 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 17498114 ( beq 1 3 2 )
		pcPlus1 = 10
		readRegA = 0
		readRegB = 4
		offset = 2
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 8 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 11 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 4
		reg[ 4 ] = 5
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 589826 ( add 1 1 2 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 4194304 ( nor 0 0 0 )
		pcPlus1 = 11
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 17498114 ( beq 1 3 2 )
		branchTarget 12
		eq ? False
		aluResult = 12 (Don't Care)
		readRegB = 4 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 12 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 4
		reg[ 4 ] = 5
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 589826 ( add 1 1 2 )
		pcPlus1 = 12
		readRegA = 0
		readRegB = 0
		offset = 2 (Don't Care)
	EX/MEM pipeline register:
		instruction = 4194304 ( nor 0 0 0 )
		branchTarget 11 (Don't Care)
		eq ? False (Don't Care)
		aluResult = -1
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 17498114 ( beq 1 3 2 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 13 starts:
	pc = 14
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 4
		reg[ 4 ] = 5
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 14
	ID/EX pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 13
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 589826 ( add 1 1 2 )
		branchTarget 14 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 4194304 ( nor 0 0 0 )
		writeData = -1
	WB/END pipeline register:
		instruction = 17498114 ( beq 1 3 2 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 14 starts:
	pc = 15
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = -1
		reg[ 1 ] = 0
		reg[ 2 ] = 1
		reg[ 3 ] = 4
		reg[ 4 ] = 5
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4 ( add 0 0 4 )
		pcPlus1 = 15
	ID/EX pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 14
		readRegA = 0
		readRegB = 0
		offset = 1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt )
		branchTarget 13 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = -1 (Don't Care)
	MEM/WB pipeline register:
		instruction = 589826 ( add 1 1 2 )
		writeData = 0
	WB/END pipeline register:
		instruction = 4194304 ( nor 0 0 0 )
		writeData = -1
end state
Machine halted
Total of 15 cycles executed
Final state of machine:

@@@
state before cycle 15 starts:
	pc = 16
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 8519693
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8650767
		dataMem[ 4 ] = 17301508
		dataMem[ 5 ] = 8716301
		dataMem[ 6 ] = 19070981
		dataMem[ 7 ] = 589826
		dataMem[ 8 ] = 1769477
		dataMem[ 9 ] = 17498114
		dataMem[ 10 ] = 4194304
		dataMem[ 11 ] = 589826
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 1
		dataMem[ 14 ] = 4
		dataMem[ 15 ] = 5
		dataMem[ 16 ] = 0
	registers:
		reg[ 0 ] = -1
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 4
		reg[ 4 ] = 5
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 5 ( add 0 0 5 )
		pcPlus1 = 16
	ID/EX pipeline register:
		instruction = 4 ( add 0 0 4 )
		pcPlus1 = 15
		readRegA = -1
		readRegB = -1
		offset = 4 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1 ( add 0 0 1 )
		branchTarget 15 (Don't Care)
		eq ? False (Don't Care)
		aluResult = -2
		readRegB = -1 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 589826 ( add 1 1 2 )
		writeData = 0
end state
